/**
 */
package kr.ac.hanyang.tosca2camp.rest.model.provider;

import java.util.ArrayList;
import java.util.Collection;

import kr.ac.hanyang.tosca2camp.rest.model.util.ModelAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ModelItemProviderAdapterFactory extends ModelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ModelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.ArtifactDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArtifactDefinitionModelItemProvider artifactDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.ArtifactDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArtifactDefinitionModelAdapter() {
		if (artifactDefinitionModelItemProvider == null) {
			artifactDefinitionModelItemProvider = new ArtifactDefinitionModelItemProvider(this);
		}

		return artifactDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.ArtifactTypeModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArtifactTypeModelItemProvider artifactTypeModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.ArtifactTypeModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArtifactTypeModelAdapter() {
		if (artifactTypeModelItemProvider == null) {
			artifactTypeModelItemProvider = new ArtifactTypeModelItemProvider(this);
		}

		return artifactTypeModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.AttributeAssignmentModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeAssignmentModelItemProvider attributeAssignmentModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.AttributeAssignmentModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAssignmentModelAdapter() {
		if (attributeAssignmentModelItemProvider == null) {
			attributeAssignmentModelItemProvider = new AttributeAssignmentModelItemProvider(this);
		}

		return attributeAssignmentModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.AttributeDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeDefinitionModelItemProvider attributeDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.AttributeDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeDefinitionModelAdapter() {
		if (attributeDefinitionModelItemProvider == null) {
			attributeDefinitionModelItemProvider = new AttributeDefinitionModelItemProvider(this);
		}

		return attributeDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.CapabilityAssignmentModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityAssignmentModelItemProvider capabilityAssignmentModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.CapabilityAssignmentModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityAssignmentModelAdapter() {
		if (capabilityAssignmentModelItemProvider == null) {
			capabilityAssignmentModelItemProvider = new CapabilityAssignmentModelItemProvider(this);
		}

		return capabilityAssignmentModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.CapabilityDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityDefinitionModelItemProvider capabilityDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.CapabilityDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityDefinitionModelAdapter() {
		if (capabilityDefinitionModelItemProvider == null) {
			capabilityDefinitionModelItemProvider = new CapabilityDefinitionModelItemProvider(this);
		}

		return capabilityDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.ConstraintModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintModelItemProvider constraintModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.ConstraintModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintModelAdapter() {
		if (constraintModelItemProvider == null) {
			constraintModelItemProvider = new ConstraintModelItemProvider(this);
		}

		return constraintModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.DataModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataModelItemProvider dataModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.DataModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataModelAdapter() {
		if (dataModelItemProvider == null) {
			dataModelItemProvider = new DataModelItemProvider(this);
		}

		return dataModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.DatatypeDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DatatypeDefinitionModelItemProvider datatypeDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.DatatypeDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDatatypeDefinitionModelAdapter() {
		if (datatypeDefinitionModelItemProvider == null) {
			datatypeDefinitionModelItemProvider = new DatatypeDefinitionModelItemProvider(this);
		}

		return datatypeDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.FunctionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionModelItemProvider functionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.FunctionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionModelAdapter() {
		if (functionModelItemProvider == null) {
			functionModelItemProvider = new FunctionModelItemProvider(this);
		}

		return functionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.GroupDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupDefinitionModelItemProvider groupDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.GroupDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupDefinitionModelAdapter() {
		if (groupDefinitionModelItemProvider == null) {
			groupDefinitionModelItemProvider = new GroupDefinitionModelItemProvider(this);
		}

		return groupDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.GroupTypeModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupTypeModelItemProvider groupTypeModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.GroupTypeModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupTypeModelAdapter() {
		if (groupTypeModelItemProvider == null) {
			groupTypeModelItemProvider = new GroupTypeModelItemProvider(this);
		}

		return groupTypeModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.ImportDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportDefinitionModelItemProvider importDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.ImportDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportDefinitionModelAdapter() {
		if (importDefinitionModelItemProvider == null) {
			importDefinitionModelItemProvider = new ImportDefinitionModelItemProvider(this);
		}

		return importDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.InterfaceDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceDefinitionModelItemProvider interfaceDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.InterfaceDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceDefinitionModelAdapter() {
		if (interfaceDefinitionModelItemProvider == null) {
			interfaceDefinitionModelItemProvider = new InterfaceDefinitionModelItemProvider(this);
		}

		return interfaceDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.InterfaceTypeModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceTypeModelItemProvider interfaceTypeModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.InterfaceTypeModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceTypeModelAdapter() {
		if (interfaceTypeModelItemProvider == null) {
			interfaceTypeModelItemProvider = new InterfaceTypeModelItemProvider(this);
		}

		return interfaceTypeModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.NodeDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeDefinitionModelItemProvider nodeDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.NodeDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeDefinitionModelAdapter() {
		if (nodeDefinitionModelItemProvider == null) {
			nodeDefinitionModelItemProvider = new NodeDefinitionModelItemProvider(this);
		}

		return nodeDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.NodeTemplateModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeTemplateModelItemProvider nodeTemplateModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.NodeTemplateModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeTemplateModelAdapter() {
		if (nodeTemplateModelItemProvider == null) {
			nodeTemplateModelItemProvider = new NodeTemplateModelItemProvider(this);
		}

		return nodeTemplateModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.OperationDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationDefinitionModelItemProvider operationDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.OperationDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationDefinitionModelAdapter() {
		if (operationDefinitionModelItemProvider == null) {
			operationDefinitionModelItemProvider = new OperationDefinitionModelItemProvider(this);
		}

		return operationDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.ParameterDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterDefinitionModelItemProvider parameterDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.ParameterDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterDefinitionModelAdapter() {
		if (parameterDefinitionModelItemProvider == null) {
			parameterDefinitionModelItemProvider = new ParameterDefinitionModelItemProvider(this);
		}

		return parameterDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.PolicyDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolicyDefinitionModelItemProvider policyDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.PolicyDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolicyDefinitionModelAdapter() {
		if (policyDefinitionModelItemProvider == null) {
			policyDefinitionModelItemProvider = new PolicyDefinitionModelItemProvider(this);
		}

		return policyDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.PolicyTypeModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolicyTypeModelItemProvider policyTypeModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.PolicyTypeModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolicyTypeModelAdapter() {
		if (policyTypeModelItemProvider == null) {
			policyTypeModelItemProvider = new PolicyTypeModelItemProvider(this);
		}

		return policyTypeModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.PropertyAssignmentModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyAssignmentModelItemProvider propertyAssignmentModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.PropertyAssignmentModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyAssignmentModelAdapter() {
		if (propertyAssignmentModelItemProvider == null) {
			propertyAssignmentModelItemProvider = new PropertyAssignmentModelItemProvider(this);
		}

		return propertyAssignmentModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.PropertyModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyModelItemProvider propertyModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.PropertyModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyModelAdapter() {
		if (propertyModelItemProvider == null) {
			propertyModelItemProvider = new PropertyModelItemProvider(this);
		}

		return propertyModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.RelationshipDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationshipDefinitionModelItemProvider relationshipDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.RelationshipDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationshipDefinitionModelAdapter() {
		if (relationshipDefinitionModelItemProvider == null) {
			relationshipDefinitionModelItemProvider = new RelationshipDefinitionModelItemProvider(this);
		}

		return relationshipDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.RelationshipTemplateModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationshipTemplateModelItemProvider relationshipTemplateModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.RelationshipTemplateModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationshipTemplateModelAdapter() {
		if (relationshipTemplateModelItemProvider == null) {
			relationshipTemplateModelItemProvider = new RelationshipTemplateModelItemProvider(this);
		}

		return relationshipTemplateModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.RepositoryDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepositoryDefinitionModelItemProvider repositoryDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.RepositoryDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepositoryDefinitionModelAdapter() {
		if (repositoryDefinitionModelItemProvider == null) {
			repositoryDefinitionModelItemProvider = new RepositoryDefinitionModelItemProvider(this);
		}

		return repositoryDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.RequirementAssignmentModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementAssignmentModelItemProvider requirementAssignmentModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.RequirementAssignmentModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementAssignmentModelAdapter() {
		if (requirementAssignmentModelItemProvider == null) {
			requirementAssignmentModelItemProvider = new RequirementAssignmentModelItemProvider(this);
		}

		return requirementAssignmentModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.RequirementDefinitionModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementDefinitionModelItemProvider requirementDefinitionModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.RequirementDefinitionModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementDefinitionModelAdapter() {
		if (requirementDefinitionModelItemProvider == null) {
			requirementDefinitionModelItemProvider = new RequirementDefinitionModelItemProvider(this);
		}

		return requirementDefinitionModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.ServiceTemplateModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceTemplateModelItemProvider serviceTemplateModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.ServiceTemplateModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceTemplateModelAdapter() {
		if (serviceTemplateModelItemProvider == null) {
			serviceTemplateModelItemProvider = new ServiceTemplateModelItemProvider(this);
		}

		return serviceTemplateModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link kr.ac.hanyang.tosca2camp.rest.model.TopologyTemplateModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopologyTemplateModelItemProvider topologyTemplateModelItemProvider;

	/**
	 * This creates an adapter for a {@link kr.ac.hanyang.tosca2camp.rest.model.TopologyTemplateModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopologyTemplateModelAdapter() {
		if (topologyTemplateModelItemProvider == null) {
			topologyTemplateModelItemProvider = new TopologyTemplateModelItemProvider(this);
		}

		return topologyTemplateModelItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (artifactDefinitionModelItemProvider != null) artifactDefinitionModelItemProvider.dispose();
		if (artifactTypeModelItemProvider != null) artifactTypeModelItemProvider.dispose();
		if (attributeAssignmentModelItemProvider != null) attributeAssignmentModelItemProvider.dispose();
		if (attributeDefinitionModelItemProvider != null) attributeDefinitionModelItemProvider.dispose();
		if (capabilityAssignmentModelItemProvider != null) capabilityAssignmentModelItemProvider.dispose();
		if (capabilityDefinitionModelItemProvider != null) capabilityDefinitionModelItemProvider.dispose();
		if (constraintModelItemProvider != null) constraintModelItemProvider.dispose();
		if (dataModelItemProvider != null) dataModelItemProvider.dispose();
		if (datatypeDefinitionModelItemProvider != null) datatypeDefinitionModelItemProvider.dispose();
		if (functionModelItemProvider != null) functionModelItemProvider.dispose();
		if (groupDefinitionModelItemProvider != null) groupDefinitionModelItemProvider.dispose();
		if (groupTypeModelItemProvider != null) groupTypeModelItemProvider.dispose();
		if (importDefinitionModelItemProvider != null) importDefinitionModelItemProvider.dispose();
		if (interfaceDefinitionModelItemProvider != null) interfaceDefinitionModelItemProvider.dispose();
		if (interfaceTypeModelItemProvider != null) interfaceTypeModelItemProvider.dispose();
		if (nodeDefinitionModelItemProvider != null) nodeDefinitionModelItemProvider.dispose();
		if (nodeTemplateModelItemProvider != null) nodeTemplateModelItemProvider.dispose();
		if (operationDefinitionModelItemProvider != null) operationDefinitionModelItemProvider.dispose();
		if (parameterDefinitionModelItemProvider != null) parameterDefinitionModelItemProvider.dispose();
		if (policyDefinitionModelItemProvider != null) policyDefinitionModelItemProvider.dispose();
		if (policyTypeModelItemProvider != null) policyTypeModelItemProvider.dispose();
		if (propertyAssignmentModelItemProvider != null) propertyAssignmentModelItemProvider.dispose();
		if (propertyModelItemProvider != null) propertyModelItemProvider.dispose();
		if (relationshipDefinitionModelItemProvider != null) relationshipDefinitionModelItemProvider.dispose();
		if (relationshipTemplateModelItemProvider != null) relationshipTemplateModelItemProvider.dispose();
		if (repositoryDefinitionModelItemProvider != null) repositoryDefinitionModelItemProvider.dispose();
		if (requirementAssignmentModelItemProvider != null) requirementAssignmentModelItemProvider.dispose();
		if (requirementDefinitionModelItemProvider != null) requirementDefinitionModelItemProvider.dispose();
		if (serviceTemplateModelItemProvider != null) serviceTemplateModelItemProvider.dispose();
		if (topologyTemplateModelItemProvider != null) topologyTemplateModelItemProvider.dispose();
	}

}
